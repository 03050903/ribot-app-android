apply plugin: 'com.android.application'
apply from: '../config/quality/quality.gradle'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.neenbedankt.android-apt'

//Setup distribution options, based on local variable $ANDROID_DISTRIBUTION
enum DISTRIBUTION_CHANNEL {
    PLAY
}

def distribution = System.getenv('ANDROID_DISTRIBUTION')
def distributionChannel
def distributionGroup
if (distribution != null) {
    if (distribution.startsWith('play')) {
        distributionChannel = DISTRIBUTION_CHANNEL.PLAY
    }
    distributionGroup = distribution.substring(distribution.indexOf('-') + 1)
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        applicationId 'io.ribot.app'
        minSdkVersion 19
        targetSdkVersion 23
        testInstrumentationRunner 'io.ribot.app.util.UnlockDeviceTestRunner'
        versionCode 1100
        // Major -> Millions, Minor -> Thousands, Bugfix -> Hundreds. E.g 1.3.72 == 1,003,072
        versionName '0.1.1'

        def externalVersionNameSuffix = System.getenv('VERSION_NAME_SUFFIX');
        if (externalVersionNameSuffix != null) versionName += '.' + externalVersionNameSuffix

        if (distributionGroup != null
                && !(distributionChannel == DISTRIBUTION_CHANNEL.PLAY
                && distributionGroup.equals('production'))) {
            versionName += '.' + distribution
        }
    }

    signingConfigs {
        // You must set up an environment var before release signing
        // Run: export RIBOT_APP_KEY={password}
        release {
            storeFile file('keystore/release.keystore')
            keyAlias '***REMOVED***'
            storePassword "$System.env.RIBOT_APP_KEY"
            keyPassword "$System.env.RIBOT_APP_KEY"
        }

        debug {
            storeFile file('keystore/debug.keystore')
            keyAlias '***REMOVED***'
            storePassword 'android'
            keyPassword 'android'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            /*
            * By default ProGuard optimizations are disabled. If you want to enable them
            * replace proguard-android.txt with proguard-android-optimize.txt but make sure you
            * test thoroughly if you go this route as app may become unstable.
            */
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    //Needed because of espresso and robolectric
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    //Needed because of this https://github.com/square/okio/issues/58
    lintOptions {
        warning 'InvalidPackage'
    }

}

play {
    track = 'alpha'
    serviceAccountEmail = '***REMOVED***'
    pk12File = file('keystore/play_store.p12')
}

dependencies {
    final PLAY_SERVICES_VERSION = '7.8.0'
    final SUPPORT_LIBRARY_VERSION = '23.0.1'
    final RETROFIT_VERSION = '2.0.0-beta1'
    final DAGGER_VERSION = '2.0.1'
    final DEXMAKER_VERSION = '1.2'
    final HAMCREST_VERSION = '1.3'
    final MOCKITO_VERSION = '1.10.19'
    final ESPRESSO_VERSION = '2.2.1'
    final JUNIT_VERSION = '4.12'
    final RUNNER_VERSION = '0.4'

    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.google.android.gms:play-services-gcm:$PLAY_SERVICES_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.sqlbrite:sqlbrite:0.3.1'
    compile "com.squareup.retrofit:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit:adapter-rxjava:$RETROFIT_VERSION"
    compile 'com.squareup:otto:1.3.8'

    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:3.1.0'
    compile 'uk.co.ribot:easyadapter:1.5.0@aar'

    compile  "com.google.dagger:dagger:$DAGGER_VERSION"
    apt      "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2

    androidTestCompile "junit:junit:$JUNIT_VERSION"
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"
    androidTestCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    androidTestCompile "com.google.dexmaker:dexmaker:$DEXMAKER_VERSION"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:$DEXMAKER_VERSION"

    androidTestApt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"

    testCompile "junit:junit:$JUNIT_VERSION"
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
}


